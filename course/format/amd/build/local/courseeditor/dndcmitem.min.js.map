{"version":3,"sources":["../../../src/local/courseeditor/dndcmitem.js"],"names":["cmid","id","reactive","isEditing","supportComponents","dragdrop","DragDrop","classes","getClasses","unregister","exporter","getExporter","cmDraggableData","state","dropdata","type","nextcmid","element","classList","add","DROPUP","remove","dispatch","BaseComponent"],"mappings":"i8DAoCmBA,C,CAAM,CAEjB,KAAKC,EAAL,CAAUD,CAAV,CAGA,GAAI,KAAKE,QAAL,CAAcC,SAAd,EAA2B,KAAKD,QAAL,CAAcE,iBAA7C,CAAgE,CAE5D,KAAKC,QAAL,CAAgB,GAAIC,WAAJ,CAAa,IAAb,CAAhB,CAEA,KAAKC,OAAL,CAAe,KAAKF,QAAL,CAAcG,UAAd,EAClB,CACJ,C,yCAKS,CACN,GAAI,KAAKH,QAAL,SAAJ,CAAiC,CAC7B,KAAKA,QAAL,CAAcI,UAAd,EACH,CACJ,C,2DASkB,CACf,GAAMC,CAAAA,CAAQ,CAAG,KAAKR,QAAL,CAAcS,WAAd,EAAjB,CACA,MAAOD,CAAAA,CAAQ,CAACE,eAAT,CAAyB,KAAKV,QAAL,CAAcW,KAAvC,CAA8C,KAAKZ,EAAnD,CACV,C,0DAQgBa,C,CAAU,CACvB,MAA0B,IAAnB,WAAAA,CAAQ,WAARA,SAAAA,CAAQ,CAAEC,IAAV,CACV,C,kDAOYD,C,CAAU,CAGnB,GAAIA,CAAQ,CAACE,QAAT,EAAqB,KAAKf,EAA1B,EAAgCa,CAAQ,CAACb,EAAT,EAAe,KAAKA,EAAxD,CAA4D,CACxD,KAAKgB,OAAL,CAAaC,SAAb,CAAuBC,GAAvB,CAA2B,KAAKZ,OAAL,CAAaa,MAAxC,CACH,CACJ,C,mDAKc,CACX,KAAKH,OAAL,CAAaC,SAAb,CAAuBG,MAAvB,CAA8B,KAAKd,OAAL,CAAaa,MAA3C,CACH,C,kCAOIN,C,CAAU,CAEX,GAAIA,CAAQ,CAACb,EAAT,EAAe,KAAKA,EAApB,EAA0Ba,CAAQ,CAACE,QAAT,EAAqB,KAAKf,EAAxD,CAA4D,CACxD,KAAKC,QAAL,CAAcoB,QAAd,CAAuB,QAAvB,CAAiC,CAACR,CAAQ,CAACb,EAAV,CAAjC,CAAgD,IAAhD,CAAsD,KAAKA,EAA3D,CACH,CACJ,C,cAjFwBsB,e","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Course index cm component.\n *\n * This component is used to control specific course modules interactions like drag and drop\n * in both course index and course content.\n *\n * @module     core_courseformat/local/courseeditor/dndcmitem\n * @class      core_courseformat/local/courseeditor/dndcmitem\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent, DragDrop} from 'core/reactive';\n\nexport default class extends BaseComponent {\n\n    /**\n     * Configure the component drag and drop.\n     *\n     * @param {number} cmid course module id\n     */\n    configDragDrop(cmid) {\n\n        this.id = cmid;\n\n        // Drag and drop is only available for components compatible course formats.\n        if (this.reactive.isEditing && this.reactive.supportComponents) {\n            // Init element drag and drop.\n            this.dragdrop = new DragDrop(this);\n            // Save dropzone classes.\n            this.classes = this.dragdrop.getClasses();\n        }\n    }\n\n    /**\n     * Remove all subcomponents dependencies.\n     */\n    destroy() {\n        if (this.dragdrop !== undefined) {\n            this.dragdrop.unregister();\n        }\n    }\n\n    // Drag and drop methods.\n\n    /**\n     * Get the draggable data of this component.\n     *\n     * @returns {Object} exported course module drop data\n     */\n    getDraggableData() {\n        const exporter = this.reactive.getExporter();\n        return exporter.cmDraggableData(this.reactive.state, this.id);\n    }\n\n    /**\n     * Validate if the drop data can be dropped over the component.\n     *\n     * @param {Object} dropdata the exported drop data.\n     * @returns {boolean}\n     */\n    validateDropData(dropdata) {\n        return dropdata?.type === 'cm';\n    }\n\n    /**\n     * Display the component dropzone.\n     *\n     * @param {Object} dropdata the accepted drop data\n     */\n    showDropZone(dropdata) {\n        // If we are the next cmid of the dragged element we accept the drop because otherwise it\n        // will get captured by the section. However, we won't trigger any mutation.\n        if (dropdata.nextcmid != this.id && dropdata.id != this.id) {\n            this.element.classList.add(this.classes.DROPUP);\n        }\n    }\n\n    /**\n     * Hide the component dropzone.\n     */\n    hideDropZone() {\n        this.element.classList.remove(this.classes.DROPUP);\n    }\n\n    /**\n     * Drop event handler.\n     *\n     * @param {Object} dropdata the accepted drop data\n     */\n    drop(dropdata) {\n        // Call the move mutation if necessary.\n        if (dropdata.id != this.id && dropdata.nextcmid != this.id) {\n            this.reactive.dispatch('cmMove', [dropdata.id], null, this.id);\n        }\n    }\n\n}\n"],"file":"dndcmitem.min.js"}